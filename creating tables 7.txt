-- Table: public."Assistants"

-- DROP TABLE public."Assistants";

CREATE TABLE public."Assistants"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    teacher_id integer NOT NULL,
    CONSTRAINT "Assistants_pkey" PRIMARY KEY (id),
    CONSTRAINT fk_teather_id FOREIGN KEY (teacher_id)
        REFERENCES public."Teathers" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Assistants"
    OWNER to postgres;

-- Index: fki_fk_teather_id

-- DROP INDEX public.fki_fk_teather_id;

CREATE INDEX fki_fk_teather_id
    ON public."Assistants" USING btree
    (teacher_id)
    TABLESPACE pg_default;



-- Table: public."Curators"

-- DROP TABLE public."Curators";

CREATE TABLE public."Curators"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    teacher_id integer NOT NULL,
    CONSTRAINT "Curators_pkey" PRIMARY KEY (id),
    CONSTRAINT fk_teather_id_curator FOREIGN KEY (teacher_id)
        REFERENCES public."Teathers" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Curators"
    OWNER to postgres;

-- Index: fki_fk_teather_id_curator

-- DROP INDEX public.fki_fk_teather_id_curator;

CREATE INDEX fki_fk_teather_id_curator
    ON public."Curators" USING btree
    (teacher_id)
    TABLESPACE pg_default;



-- Table: public."Deans"

-- DROP TABLE public."Deans";

CREATE TABLE public."Deans"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    teacher_id integer NOT NULL,
    CONSTRAINT "Deans_pkey" PRIMARY KEY (id),
    CONSTRAINT fk_teather_id_deans FOREIGN KEY (teacher_id)
        REFERENCES public."Teathers" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Deans"
    OWNER to postgres;

-- Index: fki_fk_teather_id_deans

-- DROP INDEX public.fki_fk_teather_id_deans;

CREATE INDEX fki_fk_teather_id_deans
    ON public."Deans" USING btree
    (teacher_id)
    TABLESPACE pg_default;



-- Table: public."Departments"

-- DROP TABLE public."Departments";

CREATE TABLE public."Departments"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    building integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    faculty_id integer NOT NULL,
    head_id integer NOT NULL,
    CONSTRAINT "Departments_pkey" PRIMARY KEY (id),
    CONSTRAINT uc_name_department UNIQUE (name)
        INCLUDE(name),
    CONSTRAINT fk_faculty_id FOREIGN KEY (faculty_id)
        REFERENCES public."Faculties" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_head_id FOREIGN KEY (head_id)
        REFERENCES public."Heads" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ch_building_department CHECK (building >= 1 AND building <= 5) NOT VALID,
    CONSTRAINT ch_name_department CHECK (name::text !~~ ' %'::text) NOT VALID
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Departments"
    OWNER to postgres;

-- Index: fki_fk_faculty_id

-- DROP INDEX public.fki_fk_faculty_id;

CREATE INDEX fki_fk_faculty_id
    ON public."Departments" USING btree
    (faculty_id)
    TABLESPACE pg_default;

-- Index: fki_fk_head_id

-- DROP INDEX public.fki_fk_head_id;

CREATE INDEX fki_fk_head_id
    ON public."Departments" USING btree
    (head_id)
    TABLESPACE pg_default;



-- Table: public."Faculties"

-- DROP TABLE public."Faculties";

CREATE TABLE public."Faculties"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    building integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    dean_id integer NOT NULL,
    CONSTRAINT "Faculties_pkey" PRIMARY KEY (id),
    CONSTRAINT uc_name_faculties UNIQUE (name)
        INCLUDE(name),
    CONSTRAINT fk_dean_id_faculties FOREIGN KEY (dean_id)
        REFERENCES public."Deans" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ch_building_faculties CHECK (building >= 1 AND building <= 5) NOT VALID,
    CONSTRAINT ch_name_faculties CHECK (name::text !~~ ' %'::text) NOT VALID
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Faculties"
    OWNER to postgres;

-- Index: fki_fk_dean_id_faculties

-- DROP INDEX public.fki_fk_dean_id_faculties;

CREATE INDEX fki_fk_dean_id_faculties
    ON public."Faculties" USING btree
    (dean_id)
    TABLESPACE pg_default;



-- Table: public."Groups"

-- DROP TABLE public."Groups";

CREATE TABLE public."Groups"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(10) COLLATE pg_catalog."default" NOT NULL,
    year integer NOT NULL,
    department_id integer NOT NULL,
    CONSTRAINT "Groups_pkey" PRIMARY KEY (id),
    CONSTRAINT uc_name_group UNIQUE (name)
        INCLUDE(name),
    CONSTRAINT fk_department_id FOREIGN KEY (department_id)
        REFERENCES public."Departments" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ch_name_group CHECK (name::text !~~ ' %'::text) NOT VALID,
    CONSTRAINT ch_year_group CHECK (year >= 1 AND year <= 5) NOT VALID
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Groups"
    OWNER to postgres;

-- Index: fki_fk_department_id

-- DROP INDEX public.fki_fk_department_id;

CREATE INDEX fki_fk_department_id
    ON public."Groups" USING btree
    (department_id)
    TABLESPACE pg_default;



-- Table: public."GroupsCurators"

-- DROP TABLE public."GroupsCurators";

CREATE TABLE public."GroupsCurators"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    curator_id integer NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT "GroupsCurators_pkey" PRIMARY KEY (id),
    CONSTRAINT fk_curator_id_group FOREIGN KEY (curator_id)
        REFERENCES public."Curators" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_group_id FOREIGN KEY (group_id)
        REFERENCES public."Groups" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."GroupsCurators"
    OWNER to postgres;

-- Index: fki_fk_curator_id_group

-- DROP INDEX public.fki_fk_curator_id_group;

CREATE INDEX fki_fk_curator_id_group
    ON public."GroupsCurators" USING btree
    (curator_id)
    TABLESPACE pg_default;

-- Index: fki_fk_group_id

-- DROP INDEX public.fki_fk_group_id;

CREATE INDEX fki_fk_group_id
    ON public."GroupsCurators" USING btree
    (group_id)
    TABLESPACE pg_default;



-- Table: public."GroupsLectures"

-- DROP TABLE public."GroupsLectures";

CREATE TABLE public."GroupsLectures"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    group_id integer NOT NULL,
    lecture_id integer NOT NULL,
    CONSTRAINT "GroupsLectures_pkey" PRIMARY KEY (id),
    CONSTRAINT fk_group_id_groups_lecture FOREIGN KEY (group_id)
        REFERENCES public."Groups" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_lecture_id_groups_lecture FOREIGN KEY (lecture_id)
        REFERENCES public."Lectures" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."GroupsLectures"
    OWNER to postgres;

-- Index: fki_fk_group_id_groups_lecture

-- DROP INDEX public.fki_fk_group_id_groups_lecture;

CREATE INDEX fki_fk_group_id_groups_lecture
    ON public."GroupsLectures" USING btree
    (group_id)
    TABLESPACE pg_default;

-- Index: fki_fk_lecture_id_groups_lecture

-- DROP INDEX public.fki_fk_lecture_id_groups_lecture;

CREATE INDEX fki_fk_lecture_id_groups_lecture
    ON public."GroupsLectures" USING btree
    (lecture_id)
    TABLESPACE pg_default;



-- Table: public."Heads"

-- DROP TABLE public."Heads";

CREATE TABLE public."Heads"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    teather_id integer NOT NULL,
    CONSTRAINT "Heads_pkey" PRIMARY KEY (id),
    CONSTRAINT fk_teather_id_heads FOREIGN KEY (teather_id)
        REFERENCES public."Teathers" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Heads"
    OWNER to postgres;

-- Index: fki_fk_teather_id_heads

-- DROP INDEX public.fki_fk_teather_id_heads;

CREATE INDEX fki_fk_teather_id_heads
    ON public."Heads" USING btree
    (teather_id)
    TABLESPACE pg_default;



-- Table: public."LectureRooms"

-- DROP TABLE public."LectureRooms";

CREATE TABLE public."LectureRooms"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    building integer NOT NULL,
    name character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "LectureRooms_pkey" PRIMARY KEY (id),
    CONSTRAINT "uc_name_lecture_Room" UNIQUE (name)
        INCLUDE(name),
    CONSTRAINT "ch_building_lecture_Room" CHECK (building >= 1 AND building <= 5) NOT VALID,
    CONSTRAINT "ch_name_lecture_Room" CHECK (name::text !~~ ' %'::text) NOT VALID
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."LectureRooms"
    OWNER to postgres;



-- Table: public."Lectures"

-- DROP TABLE public."Lectures";

CREATE TABLE public."Lectures"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    subject_id integer NOT NULL,
    teather_id integer NOT NULL,
    CONSTRAINT "Lectures_pkey" PRIMARY KEY (id),
    CONSTRAINT fk_subject_id_lectures FOREIGN KEY (subject_id)
        REFERENCES public."Subjects" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_teather_id_lectures FOREIGN KEY (teather_id)
        REFERENCES public."Teathers" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Lectures"
    OWNER to postgres;

-- Index: fki_fk_subject_id_lectures

-- DROP INDEX public.fki_fk_subject_id_lectures;

CREATE INDEX fki_fk_subject_id_lectures
    ON public."Lectures" USING btree
    (subject_id)
    TABLESPACE pg_default;

-- Index: fki_fk_teather_id_lectures

-- DROP INDEX public.fki_fk_teather_id_lectures;

CREATE INDEX fki_fk_teather_id_lectures
    ON public."Lectures" USING btree
    (teather_id)
    TABLESPACE pg_default;



-- Table: public."Schedules"

-- DROP TABLE public."Schedules";

CREATE TABLE public."Schedules"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    class integer NOT NULL,
    day_of_week integer NOT NULL,
    week integer NOT NULL,
    lecture_id integer NOT NULL,
    lecture_room_id integer NOT NULL,
    CONSTRAINT "Schedules_pkey" PRIMARY KEY (id),
    CONSTRAINT fk_lecture_id FOREIGN KEY (lecture_id)
        REFERENCES public."Lectures" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_lecture_room_id_schedules FOREIGN KEY (lecture_room_id)
        REFERENCES public."LectureRooms" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ch_class_schedules CHECK (class >= 1 AND class <= 8) NOT VALID,
    CONSTRAINT ch_day_of_week_schedules CHECK (day_of_week >= 1 AND day_of_week <= 7) NOT VALID,
    CONSTRAINT ch_week_schedules CHECK (week >= 1 AND week <= 52) NOT VALID
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Schedules"
    OWNER to postgres;

-- Index: fki_fk_lecture_id

-- DROP INDEX public.fki_fk_lecture_id;

CREATE INDEX fki_fk_lecture_id
    ON public."Schedules" USING btree
    (lecture_id)
    TABLESPACE pg_default;

-- Index: fki_fk_lecture_room_id_schedules

-- DROP INDEX public.fki_fk_lecture_room_id_schedules;

CREATE INDEX fki_fk_lecture_room_id_schedules
    ON public."Schedules" USING btree
    (lecture_room_id)
    TABLESPACE pg_default;



-- Table: public."Subjects"

-- DROP TABLE public."Subjects";

CREATE TABLE public."Subjects"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Subjects_pkey" PRIMARY KEY (id),
    CONSTRAINT uc_name_subject UNIQUE (name)
        INCLUDE(name),
    CONSTRAINT ch_name_subject CHECK (name::text !~~ ' %'::text) NOT VALID
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Subjects"
    OWNER to postgres;



-- Table: public."Teathers"

-- DROP TABLE public."Teathers";

CREATE TABLE public."Teathers"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    surname character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Teathers_pkey" PRIMARY KEY (id),
    CONSTRAINT ch_name_teather CHECK (name::text !~~ ' %'::text) NOT VALID,
    CONSTRAINT ch_surname_teather CHECK (surname::text !~~ ' %'::text) NOT VALID
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public."Teathers"
    OWNER to postgres;